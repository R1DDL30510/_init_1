{
  "flows": [
    {
      "name": "ingest_watch",
      "active": false,
      "nodes": [
        {
          "id": "watch_filesystem",
          "type": "n8n-nodes-base.watch",
          "parameters": {
            "path": "{{$env[\"WATCH_PATH\"]}}",
            "pollingInterval": 60,
            "events": [
              "add",
              "change"
            ]
          }
        },
        {
          "id": "hash_object",
          "type": "custom.sha256",
          "parameters": {
            "inputField": "data",
            "outputField": "meta.sha256"
          }
        },
        {
          "id": "minio_put",
          "type": "custom.minio",
          "parameters": {
            "operation": "upload",
            "bucket": "shs",
            "key": "{{ $json[\"meta\"][\"sha256\"] }}",
            "path": "{{ $json[\"path\"] }}"
          }
        },
        {
          "id": "ocr_extract",
          "type": "httpRequest",
          "parameters": {
            "url": "http://ocr:8080/ocr",
            "method": "POST",
            "jsonParameters": true,
            "options": {
              "sendHeaders": true
            },
            "body": {
              "uri": "s3://shs/{{ $json[\"meta\"][\"sha256\"] }}"
            }
          }
        },
        {
          "id": "chunk_text",
          "type": "function",
          "parameters": {
            "functionCode": "return items.map(item => ({ json: {\n  trace_id: item.json.trace_id,\n  document: item.json.document,\n  chunks: item.json.pages.map((page, index) => ({\n    text: page.text,\n    index,\n    meta: { page: index, sha256: page.sha256 }\n  }))\n} }));"
          }
        },
        {
          "id": "embed_chunks",
          "type": "httpRequest",
          "parameters": {
            "url": "http://tei:8081/embed",
            "method": "POST",
            "jsonParameters": true,
            "body": {
              "trace_id": "={{$json.trace_id || $binary.data.sha256}}",
              "inputs": "={{$json.chunks}}",
              "document": "={{$json.document}}"
            }
          }
        },
        {
          "id": "persist_postgres",
          "type": "postgres",
          "parameters": {
            "operation": "executeQuery",
            "query": "SELECT shs_ingest_upsert(:document, :chunks, :embeddings, :model)",
            "additionalFields": {
              "values": {
                "document": "={{$json.document}}",
                "chunks": "={{$json.chunks}}",
                "embeddings": "={{$json.embeddings}}",
                "model": "={{$json.model}}"
              }
            }
          }
        }
      ],
      "connections": {
        "watch_filesystem": {
          "main": [
            [
              {
                "node": "hash_object",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "hash_object": {
          "main": [
            [
              {
                "node": "minio_put",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "minio_put": {
          "main": [
            [
              {
                "node": "ocr_extract",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "ocr_extract": {
          "main": [
            [
              {
                "node": "chunk_text",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "chunk_text": {
          "main": [
            [
              {
                "node": "embed_chunks",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "embed_chunks": {
          "main": [
            [
              {
                "node": "persist_postgres",
                "type": "main",
                "index": 0
              }
            ]
          ]
        }
      }
    },
    {
      "name": "sync_reconcile",
      "active": false,
      "nodes": [
        {
          "id": "schedule",
          "type": "n8n-nodes-base.cron",
          "parameters": {
            "interval": 5,
            "intervalUnit": "minutes"
          }
        },
        {
          "id": "list_source",
          "type": "custom.fsList",
          "parameters": {
            "path": "{{$env[\"WATCH_PATH\"]}}"
          }
        },
        {
          "id": "list_documents",
          "type": "postgres",
          "parameters": {
            "operation": "executeQuery",
            "query": "SELECT id, sha256 FROM documents WHERE deleted_at IS NULL"
          }
        },
        {
          "id": "diff_state",
          "type": "function",
          "parameters": {
            "functionCode": "// reconcile hashes\nreturn shsDiff(items);"
          }
        },
        {
          "id": "apply_updates",
          "type": "postgres",
          "parameters": {
            "operation": "executeQuery",
            "query": "SELECT shs_sync_apply(:payload)"
          }
        }
      ],
      "connections": {
        "schedule": {
          "main": [
            [
              {
                "node": "list_source",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "list_source": {
          "main": [
            [
              {
                "node": "list_documents",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "list_documents": {
          "main": [
            [
              {
                "node": "diff_state",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "diff_state": {
          "main": [
            [
              {
                "node": "apply_updates",
                "type": "main",
                "index": 0
              }
            ]
          ]
        }
      }
    },
    {
      "name": "fault_drill",
      "active": false,
      "nodes": [
        {
          "id": "manual_trigger",
          "type": "n8n-nodes-base.manualTrigger",
          "parameters": {}
        },
        {
          "id": "kill_ocr",
          "type": "httpRequest",
          "parameters": {
            "url": "http://ocr:8080/admin/simulate-failure",
            "method": "POST",
            "jsonParameters": true,
            "body": {
              "trace_id": "={{$json.trace_id}}"
            }
          }
        },
        {
          "id": "wait_recovery",
          "type": "wait",
          "parameters": {
            "waitFor": "interval",
            "unit": "minutes",
            "value": 1
          }
        },
        {
          "id": "check_trace",
          "type": "postgres",
          "parameters": {
            "operation": "executeQuery",
            "query": "SELECT count(*) FROM ingest_events WHERE trace_id = :trace_id",
            "additionalFields": {
              "values": {
                "trace_id": "={{$json.trace_id}}"
              }
            }
          }
        }
      ],
      "connections": {
        "manual_trigger": {
          "main": [
            [
              {
                "node": "kill_ocr",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "kill_ocr": {
          "main": [
            [
              {
                "node": "wait_recovery",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "wait_recovery": {
          "main": [
            [
              {
                "node": "check_trace",
                "type": "main",
                "index": 0
              }
            ]
          ]
        }
      }
    }
  ]
}
